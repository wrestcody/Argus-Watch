package argus.remediation

# By default, the list of actions is empty.
default actions = []

# This rule defines a remediation action if the finding matches a specific description.
# The rule builds a set of actions, allowing for future expansion with more rules.
actions[action] {
    # Match the specific finding description generated by our checker lambda.
    input.FindingDescription == "RDS instance does not have automated backups enabled, which is required for Point-in-Time Recovery (PITR)."

    # Define the remediation action as a JSON object.
    # This structure provides the Lambda with everything it needs to execute the fix.
    action := {
        "service": "rds",
        "apiCall": "modify_db_instance",
        "targetIdentifier": input.InstanceIdentifier,
        "parameters": {
            "BackupRetentionPeriod": 7,
            "ApplyImmediately": true
        }
    }
}

# Future rules for other findings can be added here.
# For example, to remediate a public S3 bucket:
#
# actions[action] {
#     input.FindingDescription == "S3 bucket has public read access."
#     action := {
#         "service": "s3",
#         "apiCall": "put_public_access_block",
#         "targetIdentifier": input.BucketName,
#         "parameters": {
#             "PublicAccessBlockConfiguration": {
#                 "BlockPublicAcls": true,
#                 "IgnorePublicAcls": true,
#                 "BlockPublicPolicy": true,
#                 "RestrictPublicBuckets": true
#             }
#         }
#     }
# }
